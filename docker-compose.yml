services:
  db:
    image: postgres:15  
    container_name: postgres_container
    env_file: 
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - HR-manager
  nginx:
    image: nginx:stable-perl
    ports:
      - "80:80"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - db
      - backend
      - frontend
      - docs
    networks:
      - HR-manager
  backend:
    container_name: backend
    build: 
      context: .
      dockerfile: containers/api/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
        PORT: ${PORT}
        APP_URL: ${APP_URL}
        SESSION_SECRET: ${SESSION_SECRET}
        LOGIN_ADMIN: ${LOGIN_ADMIN}
        PASSWORD_ADMIN: ${PASSWORD_ADMIN}
    env_file: 
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${PORT}
      APP_URL: ${APP_URL}
      SESSION_SECRET: ${SESSION_SECRET}
      LOGIN_ADMIN: ${LOGIN_ADMIN}
      PASSWORD_ADMIN: ${PASSWORD_ADMIN} 
    ports:
      - "3000:3000"
    networks:
      - HR-manager
  frontend:
    container_name: frontend
    build: 
      context: .
      dockerfile: containers/app/Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
    env_file: 
      - .env
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "5174:5174"
    networks:
      - HR-manager
  docs:
    container_name: docs
    build: 
      context: .
      dockerfile: containers/docs/Dockerfile
    networks:
      - HR-manager
    ports:
      - "5173:5173"

volumes:
  postgres_data:

networks:
  HR-manager:
    driver: bridge